"""Add email field to Admin

Revision ID: 255bdf5c36dd
Revises: 96caeec512d1
Create Date: 2025-01-30 21:59:57.115864

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '255bdf5c36dd'
down_revision: Union[str, None] = '96caeec512d1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('admin', sa.Column('email', sa.String(), nullable=False))
    op.create_unique_constraint(None, 'admin', ['email'])
    op.create_unique_constraint(None, 'admin', ['username'])
    op.alter_column('freelancer', 'age',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('freelancer', 'total_earnings',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               type_=sa.Float(),
               existing_nullable=True)
    op.alter_column('freelancer', 'total_withdrawn',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               type_=sa.Float(),
               existing_nullable=True)
    op.alter_column('freelancer', 'current_balance',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               type_=sa.Float(),
               existing_nullable=True)
    op.alter_column('freelancer', 'pending_withdrawal',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               type_=sa.Float(),
               existing_nullable=True)
    op.create_unique_constraint(None, 'freelancer', ['email'])
    op.create_unique_constraint('unique_language_pair_per_freelancer', 'freelancer_language_pair', ['freelancer_id', 'source_language_id', 'target_language_id'])
    op.create_unique_constraint(None, 'language', ['language_name'])
    op.add_column('qa_member', sa.Column('total_tasks_reviewed', sa.Integer(), nullable=False))
    op.create_unique_constraint(None, 'qa_member', ['email'])
    op.drop_column('qa_member', 'tasks_reviewed')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('qa_member', sa.Column('tasks_reviewed', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'qa_member', type_='unique')
    op.drop_column('qa_member', 'total_tasks_reviewed')
    op.drop_constraint(None, 'language', type_='unique')
    op.drop_constraint('unique_language_pair_per_freelancer', 'freelancer_language_pair', type_='unique')
    op.drop_constraint(None, 'freelancer', type_='unique')
    op.alter_column('freelancer', 'pending_withdrawal',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(precision=10, scale=2),
               existing_nullable=True)
    op.alter_column('freelancer', 'current_balance',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(precision=10, scale=2),
               existing_nullable=True)
    op.alter_column('freelancer', 'total_withdrawn',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(precision=10, scale=2),
               existing_nullable=True)
    op.alter_column('freelancer', 'total_earnings',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(precision=10, scale=2),
               existing_nullable=True)
    op.alter_column('freelancer', 'age',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint(None, 'admin', type_='unique')
    op.drop_constraint(None, 'admin', type_='unique')
    op.drop_column('admin', 'email')
    # ### end Alembic commands ###
